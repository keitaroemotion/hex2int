#!/usr/bin/env ruby

def opts
  ARGV
    .select{|a| /^[-]/ =~ a }
end

def values
  ARGV
    .select{|a| /^[^-]/ =~ a }
    .map{ |a| 
      if File.exist?(a)
        File.open(a, "r").each_line.to_a.map { |l|
          /0[x|X][A-Za-z0-9]+/.match(l).to_s.downcase
        }.select{ |l| l }
      else
        a
      end
    }.flatten
    .select{|a|
      /^[a-fA-F0-9]+$/ =~ a || puts("[INVALID] #{a}")
      /^[a-fA-F0-9]+$/ =~ a
    }
end

#
# if no option found, hex -> int
#

def int_to_hex(i)
  res = i.to_i.to_s(16)
  if opts.include?("-u")
    res = res.upcase
  end
  return res
end

def cvt(f)
  q = {
    "a" => 10,
    "b" => 11,
    "c" => 12,
    "d" => 13,
    "e" => 14,
    "f" => 15,
  }
  return (/^[a-f]$/ =~ f ? q[f] : f).to_i
end

def cms(n)
  i = 0
  return n.to_s.chars.reverse.map { |x|
    i += 1
    if i % 3 == 0 && i != n.to_s.chars.size
      x = ",#{x}"
    end
    x
  }.reverse.join
end

def hex_to_int(x)
  hex = 0
  x.chars[2..-1].map{ |x| cvt(x) }.reverse.each_with_index do |_x, i|
    hex += _x * (16 ** i)
  end
  if opts.include?("-c")
    hex = cms(hex)
  end
  return hex
end

values.each do |v|
  if /^0x/ =~ v
    puts "#{v} => #{hex_to_int(v)}"
  else
    puts "#{v} => 0x#{int_to_hex(v)}"
  end
end
